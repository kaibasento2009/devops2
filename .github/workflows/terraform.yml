name: Full Deployment
run-name: Create Environment and Run Deployment via Terraform

on:
  workflow_dispatch:
  push:
    branches: [ "nnatai" ]
  #pull_request:
  #  branches: [ "main_test" ]
  #  workflow_dispatch: 
env:
  AWS_REGION: ap-southeast-2
  PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #HOSTNAME: ${{ secrets.SSH_HOST }}
  USER_NAME: ${{ secrets.SSH_USER_NAME }}
  FORCE_COLOR: true 

permissions:
  contents: read

jobs:
  CreateEnvTerraform:
    name: Create Env By Terraform
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: init terraform
      run: terraform init 
    - name: plan terraform
      run: terraform plan
    - name: apply terraform
      run: terraform apply --auto-approve
    - name: get terraform raw output
      run: terraform output -raw eip-public-ip
    - name: update public ip to github secret
      run: echo ip=$(terraform output -raw eip-public-ip) >> $GITHUB_ENV
    - name: deploy code to terraform environment
      run: |
        echo "$PRIVATE_KEY" > private_key.pem && chmod 600 private_key.pem
        ssh -o StrictHostKeyChecking=no -i "private_key.pem" ${USER_NAME}@$ip '
          echo "<h1>Hi -- This is Github Action Pipeline --- This is latest code with env that created by terraform </h1>" | sudo tee /var/www/html/index.nginx-debian.html
        '
    - name: testing site that created by terraform
      run: curl http://$ip
    - name: destroy terraform 
      run: terraform destroy --auto-approve
